<?xml version="1.0" encoding="UTF-8"?>
<keywordspec generated="20170201 07:02:42" type="library" name="FtpLibrary" format="ROBOT">
<version></version>
<scope>test suite</scope>
<namedargs>yes</namedargs>
<doc>This library provides functionality of FTP client.

Version 1.3 released on 30th of January 2016.

What's new in release 1.3:
- multiple connections in parallel
- strongly refactored source code
- enabling/disabling printout of messages returned by ftp server

Despite new features, 1.3 should be compatible with previous versions.

FTP communication provided by ftplib.py

Author: Marcin Kowalczyk

Website: http://sourceforge.net/projects/rf-ftp-py/

Installation:
- run command: pip install robotframework-ftplibrary

OR
- download, unzip and run command: python setup.py install

OR
- download, unzip and copy FtpLibrary.py file to a directory pointed by
    PYTHONPATH (for example ...\Python27\lib\site-packages).

The simplest example (connect, change working dir, print working dir, close):
 | ftp connect | 192.168.1.10 | mylogin | mypassword |
 | cwd | /home/myname/tmp/testdir |
 | pwd |
 | ftp close |

It is possible to use multiple ftp connections in parallel. Connections are
identified by string identifiers:
 | ftp connect | 192.168.1.10 | mylogin | mypassword | connId=ftp1 |
 | ftp connect | 192.168.1.20 | mylogin2 | mypassword2 | connId=ftp2 |
 | cwd | /home/myname/tmp/testdir | ftp1 |
 | cwd | /home/myname/tmp/testdir | ftp2 |
 | pwd | ftp2 |
 | pwd | ftp1 |
 | ftp close | ftp2 |
 | ftp close | ftp1 |</doc>
<init>
<arguments>
<arg>printOutput=True</arg>
</arguments>
<doc>During library import it is possible to disable logging of server messages.
By default logging is enabled:
| Library | FtpLibrary.py |
To disable logging of server messages, additional parameter must be added to
import:
| Library | FtpLibrary.py | False |</doc>
<tags>
</tags>
</init>
<kw name="Cwd">
<arguments>
<arg>directory</arg>
<arg>connId=default</arg>
</arguments>
<doc>Changes working directory and returns server output. Parameters:
- directory - a path to which working dir should be changed.
- connId(optional) - connection identifier. By default equals 'default'
Example:
| cwd | /home/myname/tmp/testdir |  |
| cwd | /home/myname/tmp/testdir | ftp1 |</doc>
<tags>
</tags>
</kw>
<kw name="Delete">
<arguments>
<arg>targetFile</arg>
<arg>connId=default</arg>
</arguments>
<doc>Deletes file on FTP server. Returns server output.
Parameters:
- targetFile - file path to be deleted
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Dir">
<arguments>
<arg>connId=default</arg>
</arguments>
<doc>Returns list of contents of current directory.
Parameters:
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Download File">
<arguments>
<arg>remoteFileName</arg>
<arg>localFilePath=None</arg>
<arg>connId=default</arg>
</arguments>
<doc>Downloads file from current directory on FTP server in binary mode. If
localFilePath is not given, file is saved in current local directory (by
default folder containing robot framework project file) with the same name
as source file. Returns server output
Parameters:
- remoteFileName - file name on FTP server
- localFilePath (optional) - local file name or path where remote file should be saved.
- connId(optional) - connection identifier. By default equals 'default'
localFilePath variable can have following meanings:
1. file name (will be saved in current default directory);
2. full path (dir + file name)
3. dir path (original file name will be added)
Examples:
| download file | a.txt |  |  |
| download file | a.txt | b.txt | connId=ftp1 |
| download file | a.txt | D:/rfftppy/tmp |  |
| download file | a.txt | D:/rfftppy/tmp/b.txt |  |
| download file | a.txt | D:\rfftppy\tmp\c.txt |  |</doc>
<tags>
</tags>
</kw>
<kw name="Ftp Close">
<arguments>
<arg>connId=default</arg>
</arguments>
<doc>Closes FTP connection. Returns None.
Parameters:
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Ftp Connect">
<arguments>
<arg>host</arg>
<arg>user=anonymous</arg>
<arg>password=anonymous@</arg>
<arg>port=21</arg>
<arg>timeout=30</arg>
<arg>connId=default</arg>
</arguments>
<doc>Constructs FTP object, opens a connection and login.
Call this function before any other (otherwise raises exception).
Returns server output.
Parameters:
    - host - server host address
    - user(optional) - FTP user name. If not given, 'anonymous' is used.
    - password(optional) - FTP password. If not given, 'anonymous@' is used.
    - port(optional) - TCP port. By default 21.
    - timeout(optional) - timeout in seconds. By default 30.
    - connId(optional) - connection identifier. By default equals 'default'
Examples:
| ftp connect | 192.168.1.10 | mylogin | mypassword |  |  |
| ftp connect | 192.168.1.10 |  |  |  |  |
| ftp connect | 192.168.1.10 | mylogin | mypassword | connId=secondConn |  |
| ftp connect | 192.168.1.10 | mylogin | mypassword | 29 | 20 |
| ftp connect | 192.168.1.10 | mylogin | mypassword | 29 |  |
| ftp connect | 192.168.1.10 | mylogin | mypassword | timeout=20 |  |
| ftp connect | 192.168.1.10 | port=29 | timeout=20 |  |  |</doc>
<tags>
</tags>
</kw>
<kw name="Get All Ftp Connections">
<arguments>
</arguments>
<doc>Returns a dictionary containing active ftp connections.</doc>
<tags>
</tags>
</kw>
<kw name="Get Welcome">
<arguments>
<arg>connId=default</arg>
</arguments>
<doc>Returns wlecome message of FTP server.
Parameters:
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Mkd">
<arguments>
<arg>newDirName</arg>
<arg>connId=default</arg>
</arguments>
<doc>Creates new directory on FTP server. Returns new directory path.
Parameters:
- newDirName - name of a new directory
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Pwd">
<arguments>
<arg>connId=default</arg>
</arguments>
<doc>Returns the pathname of the current directory on the server.
Parameters:
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Rename">
<arguments>
<arg>targetFile</arg>
<arg>newName</arg>
<arg>connId=default</arg>
</arguments>
<doc>Renames (actually moves) file on FTP server. Returns server output.
Parameters:
- targetFile - name of a file or path to a file to be renamed
- newName - new name or new path
- connId(optional) - connection identifier. By default equals 'default'
Example:
| rename | tmp/z.txt | /home/myname/tmp/testdir/z.txt |</doc>
<tags>
</tags>
</kw>
<kw name="Rmd">
<arguments>
<arg>directory</arg>
<arg>connId=default</arg>
</arguments>
<doc>Deletes directory from FTP server. Returns server output.
Parameters:
- directory - path to a directory to be deleted
- connId(optional) - connection identifier. By default equals 'default'</doc>
<tags>
</tags>
</kw>
<kw name="Send Cmd">
<arguments>
<arg>command</arg>
<arg>connId=default</arg>
</arguments>
<doc>Sends any command to FTP server. Returns server output.
Parameters:
- command - any valid command to be sent (invalid will result in exception).
- connId(optional) - connection identifier. By default equals 'default'
Example:
| send cmd | HELP |</doc>
<tags>
</tags>
</kw>
<kw name="Size">
<arguments>
<arg>fileToCheck</arg>
<arg>connId=default</arg>
</arguments>
<doc>Checks size of a file on FTP server. Returns size of a file in bytes (integer).
Parameters:
- fileToCheck - file name or path to a file on FTP server
- connId(optional) - connection identifier. By default equals 'default'
Example:
| ${file1size} = | size | /home/myname/tmp/uu.txt | connId=ftp1 |
| Should Be Equal As Numbers | ${file1size} | 31 |  |

Note that the SIZE command is not standardized, but is supported by many
 common server implementations.</doc>
<tags>
</tags>
</kw>
<kw name="Upload File">
<arguments>
<arg>localFileName</arg>
<arg>remoteFileName=None</arg>
<arg>connId=default</arg>
</arguments>
<doc>Sends file from local drive to current directory on FTP server in binary mode.
Returns server output.
Parameters:
- localFileName - file name or path to a file on a local drive.
- remoteFileName (optional) - a name or path containing name under which file should be saved.
- connId(optional) - connection identifier. By default equals 'default'
If remoteFileName agument is not given, local name will be used.
Examples:
| upload file | x.txt | connId=ftp1 |
| upload file | D:/rfftppy/y.txt |  |
| upload file | u.txt | uu.txt |
| upload file | D:/rfftppy/z.txt | zz.txt |
| upload file | D:\rfftppy\v.txt |  |</doc>
<tags>
</tags>
</kw>
</keywordspec>
